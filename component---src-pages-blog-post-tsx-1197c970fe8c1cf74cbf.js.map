{"version":3,"sources":["webpack:///./src/components/blog_post_elements/BannerWithCaption/index.ts","webpack:///./src/components/blog_post_elements/BannerWithCaption/BannerWithCaption.tsx","webpack:///./src/components/blog_post_elements/Embed/index.ts","webpack:///./src/components/blog_post_elements/Embed/Embed.tsx","webpack:///./src/components/blog_post_elements/RichText/index.ts","webpack:///./src/components/blog_post_elements/RichText/RichText.tsx","webpack:///./src/components/blog_post_elements/ListOfArticles/index.ts","webpack:///./src/components/blog_post_elements/ListOfArticles/ListOfArticles.tsx","webpack:///./src/components/ScrollIndicator/ScrollIndicator.tsx","webpack:///./src/pages/blogPost.tsx","webpack:///./src/components/blog_post_elements/Embed/Embed.module.scss","webpack:///./src/components/gatsby_elements/Layout.module.scss","webpack:///./src/components/blog_post_elements/BannerWithCaption/BannerWithCaption.module.scss","webpack:///./src/pages/blogPost.module.scss","webpack:///./src/components/blog_post_elements/RichText/RichText.module.scss","webpack:///./src/components/gatsby_elements/layout.tsx","webpack:///./src/components/blog_post_elements/ListOfArticles/ListOfArticles.module.scss","webpack:///./src/components/ScrollIndicator/ScrollIndicator.module.scss"],"names":["BannerWithCaption","props","detailsData","url","alt","caption","copyright","undefined","className","styles","bannerContainer","bannerImage","src","title","loading","figcaption","Embed","embeddedLink","text","dangerouslySetInnerHTML","__html","RichText","richText","ListOfArticles","articlesData","listArticlesContainer","header","primary","list_of_articles","listOfArticles","items","map","item","uidPost","filteredArticlesDataByUid","edge","node","uid","data","mainImage","main_image","filter","Boolean","singleArticleOnTheList","key","to","linkInList","articleImage","linkToArticle","singleLink","articles_to_link","ScrollIndicator","scrollProgress","scrolled","document","documentElement","scrollTop","scrollHeight","clientHeight","setState","scroll","state","componentDidMount","window","addEventListener","this","componentWillUnmount","removeEventListener","render","progressContainerStyle","progressBarStyle","style","width","React","Component","PostsPage","prismicPosts","postData","firstPublicationDate","first_publication_date","body","allPrismicPosts","edges","subtitle","hashtagsArray","hashtags","split","firstParagraph","text_of_the_post","image","readTime","read_time","sliceTypes","sliceType","index","slice_type","image_banner","link_to_iframe","rich_text_in_post","console","log","description","pathname","sectionContainer","postContentContainer","hashtag","singleHashtag","sectionContainer2","module","exports","Layout","children","layoutContainer","desktopScreenVersion","childrenContainer","footer"],"mappings":"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","file":"component---src-pages-blog-post-tsx-1197c970fe8c1cf74cbf.js","sourcesContent":["import BannerWithCaption from './BannerWithCaption';\n\nexport default BannerWithCaption;\n","// global dependencies\nimport React from 'react';\n\n// local dependencies\nimport styles from './BannerWithCaption.module.scss';\n\ninterface BannerProps {\n  detailsData: Record<string, any>;\n}\n\nconst BannerWithCaption: React.FC<BannerProps> = props => {\n  const { detailsData } = props;\n  const { url, alt, copyright: caption } = detailsData;\n  // console.log(`BannerWithCaption> ${JSON.stringify(detailsData)}`);\n  if (url === undefined || alt === undefined || caption === undefined) {\n    // console.error('Image details retrieved from CMS are undefined');\n    // console.table(detailsData);\n    return null;\n  }\n  return (\n    <div className={styles.bannerContainer}>\n      <img className={styles.bannerImage} src={url} alt={alt} title={alt} loading=\"lazy\"/>\n      <figcaption className={styles.figcaption}>Fot. {caption}</figcaption>\n    </div>\n  );\n};\n\nexport default BannerWithCaption;\n","import Embed from './Embed';\n\nexport default Embed;\n","// global dependencies\nimport React from 'react';\n\n// local dependencies\nimport styles from './Embed.module.scss';\n\ninterface EmbedProps {\n  detailsData: Record<string, never>;\n}\nconst Embed: React.FC<EmbedProps> = props => {\n  const { detailsData } = props;\n  const { text: embeddedLink } = detailsData[0];\n  return (\n    <>\n      <div\n        className={styles.embeddedLink}\n        dangerouslySetInnerHTML={{ __html: embeddedLink }}\n      />\n    </>\n  );\n};\n\nexport default Embed;\n","import RichText from './RichText';\n\nexport default RichText;\n","// global dependencies\nimport React from 'react';\n\n// local dependencies\nimport styles from './RichText.module.scss';\n\ninterface RichTextProps {\n  detailsData: Record<string, any>;\n}\n\nconst RichText: React.FC<RichTextProps> = props => {\n  const { detailsData } = props;\n  const richText = detailsData[0].text;\n  // console.table(`this is detailsData before RETURN: ${JSON.stringify(detailsData)}`);\n\n  return (\n    <>\n      {/* {detailsData.map((item: Record<string, any>, index: string) => {\n        switch (item.type) {\n                    case 'paragraph': {\n            const { text } = item;\n            let formattedText = text;\n            let extraLength = 0;\n            if (typeof item.spans !== 'undefined') {\n              for (const element of item.spans) {\n                const { start: spanStart } = element;\n                const { end: spanEnd } = element;\n                const { type: spanType } = element;\n                const length = spanStart + extraLength;\n                const newSpanStart = spanStart + extraLength;\n                const newSpanEnd = spanEnd + extraLength;\n\n                let substringToChange = text.slice(spanStart, spanEnd);\n                switch (spanType) {\n                  case 'strong': {\n                    substringToChange = `<strong>${substringToChange}</strong>`;\n                    extraLength += 17;\n                    console.log(\n                      `STRONG substringToChange.length: ${substringToChange.length}`\n                    );\n                    console.log(`STRONG extralength: ${extraLength}`);\n                    break;\n                  }\n                  case 'em': {\n                    substringToChange = `<em>${substringToChange}</em>`;\n                    extraLength += 9;\n                    console.log(`EM extralength: ${extraLength}`);\n                    break;\n                  }\n                  case 'hyperlink': {\n                    const slashCharPosition = substringToChange.indexOf('/');\n                    const textLink = substringToChange.slice(\n                      0,\n                      slashCharPosition\n                    );\n                    substringToChange = `<a src={substringToChange}>${textLink}</a>`;\n                    extraLength += textLink.length + 14;\n                    console.log(`LINK extralength: ${extraLength}`);\n                    break;\n                  }\n                }\n                console.log(`extralength: ${extraLength}`);\n\n                formattedText =\n                  formattedText.substring(0, newSpanStart) +\n                  substringToChange +\n                  formattedText.substring(newSpanEnd);\n              }\n            }\n            return (\n              <p\n                className={styles.paragraph}\n                dangerouslySetInnerHTML={{ __html: formattedText }}\n              />\n            );\n          }\n\n          case 'paragraph': {\n            const itemText = item.text; // .replaceAll('\\n', '<br/>');\n            const regexNewLine = /\\\\n/g; // finds digits\\t{anyWordsHere}\\n\n            const regexOrderedList = /(\\d+)\\.\\\\t(.*?)\\\\n/g; // finds digits\\t{anyWordsHere}\\n\n            const regexUnorderedList = /•\\\\t(.*?)\\\\n/g; // finds •\\t{anyWordsHere}\\n\n\n            const orderedListArray = itemText.match(regexOrderedList);\n            const unorderedListArray = itemText.match(regexUnorderedList);\n            const formattedText = itemText\n              .replace(regexOrderedList, '')\n              .replace(regexUnorderedList, '')\n              .replace(regexNewLine, '<br/>');\n\n            console.log(`formattedText is: ${formattedText}`);\n            console.log(`orderedListArray is: ${orderedListArray}`);\n            console.log(`unorderedListArray is: ${unorderedListArray}`);\n\n            return (\n              <p\n                className={styles.preformatted}\n                dangerouslySetInnerHTML={{ __html: formattedText }}\n              />\n            );\n          }\n\n          default:\n            console.table(\n              `this is detailsData: ${JSON.stringify(detailsData)}`\n            );\n        }\n        return null;\n      })} */}\n\n      <p\n        className={styles.richText}\n        dangerouslySetInnerHTML={{ __html: richText }}\n      />\n    </>\n  );\n};\n\nexport default RichText;\n","import ListOfArticles from \"./ListOfArticles\"\n\nexport default ListOfArticles;\n","// global dependencies\nimport React from 'react';\nimport { graphql, Link, StaticQuery } from 'gatsby';\n\n// local dependencies\nimport styles from './ListOfArticles.module.scss';\nimport BannerWithCaption from '../BannerWithCaption';\n\ninterface PropsArticlesList {\n  detailsData: Record<string, any>;\n  articlesData: any;\n}\n\nconst ListOfArticles: React.FC<PropsArticlesList> = props => {\n  const { detailsData, articlesData } = props;\n\n  const singleLink = (uidPost: string) => {\n    const articlesDataByUid = articlesData.map((edge: any) => {\n      // console.log(`edge.node.uid ${edge.node.uid}`);\n      // console.log(`uidPost ${uidPost}`);\n      if (uidPost === edge.node.uid) {\n        const { text } = edge.node.data.title[0];\n        const mainImage = edge.node.data.main_image;\n        return { mainImage, text };\n      }\n      return null;\n    });\n    // console.log(`articlesDataByUid ${JSON.stringify(articlesDataByUid)}`);\n    const filteredArticlesDataByUid = articlesDataByUid.filter(Boolean);\n    // console.log(`filteredArticlesDataByUid ${JSON.stringify(filteredArticlesDataByUid)}`);\n\n    if (\n      filteredArticlesDataByUid[0] !== null &&\n      filteredArticlesDataByUid[0] !== undefined\n    ) {\n      const { mainImage, text } = filteredArticlesDataByUid[0];\n\n      return (\n        <li className={styles.singleArticleOnTheList} key={uidPost}>\n          <Link to={`/posts/${uidPost}`} className={styles.linkInList}>\n            <img\n              className={styles.articleImage}\n              src={mainImage.url}\n              alt={mainImage.alt}\n            />\n            <p className={styles.linkToArticle}>{text}</p>\n          </Link>\n        </li>\n      );\n    }\n    return null;\n  };\n\n  return (\n    <div className={styles.listArticlesContainer}>\n      <div className={styles.header}>\n        {detailsData.primary.list_of_articles[0].text}\n      </div>\n      <ul className={styles.listOfArticles}>\n        {detailsData.items.map(\n          (item: { articles_to_link: { uid: string } }) => {\n            const { uid: articleUID } = item.articles_to_link;\n            return singleLink(articleUID);\n          }\n        )}\n      </ul>\n    </div>\n  );\n};\n\nexport default ListOfArticles;\n","// global dependencies\nimport React from 'react';\n\n// local dependencies\nimport styles from './ScrollIndicator.module.scss';\n\ninterface ScrollIndicatorState {\n  scroll: number;\n}\n\nclass ScrollIndicator extends React.Component<any, ScrollIndicatorState> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      scroll: 0,\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener('scroll', this.scrollProgress);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('scroll', this.scrollProgress);\n  }\n\n  scrollProgress = () => {\n    const scrollPx = document.documentElement.scrollTop;\n    const winHeightPx =\n      document.documentElement.scrollHeight -\n      document.documentElement.clientHeight;\n    const scrolled = (scrollPx / winHeightPx) * 100;\n    this.setState({ scroll: scrolled });\n  };\n\n  render() {\n    const { scroll } = this.state;\n    return (\n      <div className={styles.progressContainerStyle}>\n        <div\n          className={styles.progressBarStyle}\n          style={{ width: `${scroll}%` }}\n        />\n      </div>\n    );\n  }\n}\n\nexport default ScrollIndicator;\n","import React from 'react';\nimport { graphql, Link } from 'gatsby';\n\nimport SEO from '../components/seo';\nimport Layout from '../components/gatsby_elements/layout';\nimport styles from './blogPost.module.scss';\nimport BannerWithCaption from '../components/blog_post_elements/BannerWithCaption';\nimport Embed from '../components/blog_post_elements/Embed';\nimport RichText from '../components/blog_post_elements/RichText';\n// import SimpleQuote from '../components/blog_post_elements/SimpleQuote';\n// import PictRightColumn from '../components/blog_post_elements/PictRightColumn';\n// import PictLeftColumn from '../components/blog_post_elements/PictLeftColumn';\nimport ListOfArticles from '../components/blog_post_elements/ListOfArticles';\nimport ScrollIndicator from '../components/ScrollIndicator/ScrollIndicator';\n\nconst PostsPage: React.FC<any> = ({ data }) => {\n  // console.table(`DATA in PostPage: ${JSON.stringify(data)}`);\n  if (data !== undefined) {\n    const {\n      data: postData,\n      first_publication_date: firstPublicationDate,\n      url,\n    } = data.prismicPosts;\n    const { body } = data.prismicPosts.data;\n    const articlesData = data.allPrismicPosts.edges;\n    // console.log(`data.allPrismicPosts  : ${JSON.stringify(articlesData)}`);\n\n    // variables from prismicPosts\n    const title = postData.title[0].text;\n    // if (postData.subtitle[0].text !== undefined)\n    const subtitle =\n      postData.subtitle[0] === undefined ? '' : postData.subtitle[0].text;\n    const hashtagsArray = postData.hashtags ? postData.hashtags.split(',') : [];\n    const firstParagraph =\n      postData.text_of_the_post[0] === undefined\n        ? ''\n        : postData.text_of_the_post[0].text;\n    const image = postData.main_image;\n    const readTime = postData.read_time[0].text;\n\n    // variables from data.prismicPosts.data.body\n    const sliceTypes = body.map((sliceType: any, index: string) => {\n      switch (sliceType.slice_type) {\n        case 'banner_with_caption':\n          return (\n            <BannerWithCaption detailsData={sliceType.primary.image_banner} />\n          );\n        case 'embed':\n          return <Embed detailsData={sliceType.primary.link_to_iframe} />;\n        case 'text':\n          return <RichText detailsData={sliceType.primary.rich_text_in_post} />;\n        // case 'quote':\n        //   return <SimpleQuote detailsData={sliceType.primary.quote} />;\n        // case 'pictright_text_columns':\n        //   return <PictRightColumn detailsData={sliceType} />;\n        // case 'pictleft_text_columns':\n        //   return <PictLeftColumn detailsData={sliceType} />;\n        case 'list_of_articles':\n          return (\n            <ListOfArticles\n              detailsData={sliceType}\n              articlesData={articlesData}\n            />\n          );\n        default:\n          // console.table(`this is slicetype: ${JSON.stringify(sliceType)}`);\n      }\n      return null;\n    });\n    console.log('URL for Pathname: ', url);\n\n    return (\n      <Layout>\n        <SEO\n          title={title}\n          description={subtitle}\n          pathname={url}\n          image={image.url}\n        />\n        <ScrollIndicator />\n        <section className={styles.sectionContainer}>\n          <img className={styles.mainImage} src={image.url} alt={image.alt} />\n          <figcaption className={styles.figcaption}>\n            Fot. {image.copyright}\n          </figcaption>\n          <div className={styles.postContentContainer}>\n            <h1>{title}</h1>\n            <h3>{subtitle}</h3>\n            <div>{readTime}</div>\n            <div className={styles.firstPublicationDate}>\n              {firstPublicationDate}\n            </div>\n            <ul className={styles.hashtags}>\n              {hashtagsArray.map((hashtag: string, index: string) => (\n                <li className={styles.singleHashtag} key={index}>\n                  {hashtag}\n                </li>\n              ))}\n            </ul>\n          </div>\n        </section>\n        <section className={styles.sectionContainer2}>\n          <p className={styles.firstParagraph}>{firstParagraph}</p>\n          {sliceTypes}\n        </section>\n      </Layout>\n    );\n  }\n  return null;\n};\n\nexport default PostsPage;\n\nexport const blogPostQuery = graphql`\n  query PostBySlug($uid: String!) {\n    # Query the post with the uid passed in from gatsby-node.js\n    prismicPosts(uid: { eq: $uid }) {\n      url\n      uid\n      first_publication_date(formatString: \"DD MMMM YYYY\")\n      data {\n        title {\n          text\n        }\n        text_of_the_post {\n          text\n        }\n        read_time {\n          text\n        }\n        main_image {\n          alt\n          url\n          copyright\n        }\n        hashtags\n        subtitle {\n          text\n        }\n        body {\n          slice_type\n          primary {\n            rich_text_in_post {\n              text\n              type\n            }\n            link_to_iframe {\n              text\n            }\n            list_of_articles {\n              text\n            }\n            image_banner {\n              alt\n              url\n              copyright\n            }\n          }\n          items {\n            articles_to_link {\n              uid\n            }\n          }\n        }\n      }\n    }\n    allPrismicPosts {\n      edges {\n        node {\n          uid\n          data {\n            title {\n              text\n            }\n            main_image {\n              url\n              alt\n              copyright\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"embeddedLink\":\"Embed-module--embeddedLink--2hySB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"layoutContainer\":\"Layout-module--layoutContainer--3hL1M\",\"childrenContainer\":\"Layout-module--childrenContainer--I2OUF\",\"footer\":\"Layout-module--footer--Tpjf_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bannerContainer\":\"BannerWithCaption-module--bannerContainer--_ja_d\",\"bannerImage\":\"BannerWithCaption-module--bannerImage--2Ocsq\",\"figcaption\":\"BannerWithCaption-module--figcaption--21LfI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"scrollIndicator\":\"blogPost-module--scrollIndicator--2ECt8\",\"sectionContainer\":\"blogPost-module--sectionContainer--yYU1d\",\"sectionContainer2\":\"blogPost-module--sectionContainer2--2A1V8\",\"mainImage\":\"blogPost-module--mainImage--2E70_\",\"figcaption\":\"blogPost-module--figcaption--1z8Bs\",\"postContentContainer\":\"blogPost-module--postContentContainer--24ynX\",\"firstPublicationDate\":\"blogPost-module--firstPublicationDate--1xwry\",\"hashtags\":\"blogPost-module--hashtags--3T_0Y\",\"singleHashtag\":\"blogPost-module--singleHashtag--1nq68\",\"firstParagraph\":\"blogPost-module--firstParagraph--23FXQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"richText\":\"RichText-module--richText--3X3LF\"};","import React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport './layout.css';\nimport styles from './Layout.module.scss';\nimport NavbarBlog from '../Navbar/NavbarBlog';\nimport Footer from '../../pages/sections/footer';\n\nconst Layout: React.FC = ({ children }) => {\n  // const data = useStaticQuery(graphql`\n  //   query SiteTitleQuery {\n  //     site {\n  //       siteMetadata {\n  //         title\n  //       }\n  //     }\n  //   }\n  // `);\n\n  return (\n    <>\n      <div className={styles.layoutContainer}>\n        <NavbarBlog desktopScreenVersion />\n        <main className={styles.childrenContainer}>{children}</main>\n        <div className={styles.footer}>\n          <Footer />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Layout;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listArticlesContainer\":\"ListOfArticles-module--listArticlesContainer--3hgnD\",\"header\":\"ListOfArticles-module--header--3lRz5\",\"listOfArticles\":\"ListOfArticles-module--listOfArticles--1vsMp\",\"singleArticleOnTheList\":\"ListOfArticles-module--singleArticleOnTheList--PDl1v\",\"linkInList\":\"ListOfArticles-module--linkInList--1cyjg\",\"articleImage\":\"ListOfArticles-module--articleImage--3SVpt\",\"linkToArticle\":\"ListOfArticles-module--linkToArticle--2hCkc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"progressContainerStyle\":\"ScrollIndicator-module--progressContainerStyle--2Az_G\",\"progressBarStyle\":\"ScrollIndicator-module--progressBarStyle--32qlQ\"};"],"sourceRoot":""}