{"version":3,"sources":["webpack:///./src/components/LoadingDots/index.ts","webpack:///./src/components/LoadingDots/LoadingDots.tsx","webpack:///./src/pages/blog.tsx","webpack:///./src/components/gatsby_elements/Layout.module.scss","webpack:///./src/pages/blog.module.scss","webpack:///./src/components/LoadingDots/LoadingDots.module.scss","webpack:///./src/components/gatsby_elements/layout.tsx"],"names":["LoadingDots","props","className","styles","loaderContainer","loaderDot","SinglePostOnPostsList","lazy","BlogPostsList","queryData","data","posts","allPrismicBlogPosts","edges","pageData","prismicListofblogs","image","main_image","url","imageAltText","alt","postsTotalCount","totalCount","title","description","pathname","sectionContainer","onContextMenu","e","preventDefault","blogHeader","headerTitle","blogs_title","text","headerImage","src","postsCounter","underHeading","listOfPosts","map","post","index","node","postData","date","first_publication_date","uid","postTitle","imageURL","imageAlt","fallback","key","singlePostData","module","exports","Layout","children","layoutContainer","desktopScreenVersion","childrenContainer","footer"],"mappings":"+LAEeA,ECKoB,SAAAC,GACjC,OACE,yBAAKC,UAAWC,IAAOC,iBACrB,yBAAKF,UAAWC,IAAOE,YACvB,yBAAKH,UAAWC,IAAOE,YACvB,yBAAKH,UAAWC,IAAOE,YACvB,yBAAKH,UAAWC,IAAOE,YACvB,yBAAKH,UAAWC,IAAOE,cCJvBC,EAAwBC,gBAAK,kBACjC,2DA2DaC,UAxDsB,SAAC,GAAwB,IAAhBC,EAAgB,EAAtBC,KAChCC,EAAQF,EAAUG,oBAAoBC,MACtCC,EAAWL,EAAUM,mBAAmBL,KACxCM,EAAQF,EAASG,WAAWC,IAC5BC,EAAeL,EAASG,WAAWG,IACnCC,EAAkBV,EAAMW,WAE9B,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEC,MAAM,mCACNC,YAAY,wEACZC,SAAS,UAEX,6BACEvB,UAAWC,IAAOuB,iBAClBC,cAAe,SAAAC,GAAC,OAAIA,EAAEC,mBAEtB,yBAAK3B,UAAWC,IAAO2B,YACrB,wBAAI5B,UAAWC,IAAO4B,aAAcjB,EAASkB,YAAY,GAAGC,MAC5D,yBAAK/B,UAAWC,IAAO+B,YAAaC,IAAKnB,EAAOI,IAAKD,KAEvD,yBAAKjB,UAAWC,IAAOiC,cAAef,GACtC,yBAAKnB,UAAWC,IAAOkC,cACrB,wBAAInC,UAAWC,IAAOmC,aACnB3B,EAAM4B,KAAI,SAACC,EAAMC,GAAU,MAKtBD,EAAKE,KAHDC,EAFkB,EAExBjC,KACwBkC,EAHA,EAGxBC,uBACAC,EAJwB,EAIxBA,IAEIC,EAAYJ,EAASpB,MAAM,GAAGU,KAC9Be,EAAWL,EAAS1B,WAAWC,IAC/B+B,EAAWN,EAAS1B,WAAWG,IAC/BF,EAAM,UAAU4B,EACtB,OACE,kBAAC,WAAD,CAAUI,SAAUlD,EAAamD,IAAKjC,GACpC,kBAACZ,EAAD,CACE8C,eAAgB,CACdL,YACAE,WACAD,WACA9B,MACA0B,oB,qBCxDtBS,EAAOC,QAAU,CAAC,gBAAkB,wCAAwC,kBAAoB,0CAA0C,OAAS,iC,qBCAnJD,EAAOC,QAAU,CAAC,iBAAmB,uCAAuC,WAAa,iCAAiC,YAAc,kCAAkC,YAAc,kCAAkC,YAAc,kCAAkC,WAAa,iCAAiC,kBAAoB,wCAAwC,UAAY,gCAAgC,yBAA2B,+CAA+C,cAAgB,sC,4CCA1fD,EAAOC,QAAU,CAAC,gBAAkB,6CAA6C,UAAY,uCAAuC,QAAU,uC,kCCD9I,kFAgCeC,IAxBU,SAAC,GAAiB,IAAfC,EAAe,EAAfA,SAW1B,OACE,oCACE,yBAAKtD,UAAWC,IAAOsD,iBACrB,kBAAC,IAAD,CAAYC,sBAAoB,IAChC,0BAAMxD,UAAWC,IAAOwD,mBAAoBH,GAC5C,yBAAKtD,UAAWC,IAAOyD,QACrB,kBAAC,UAAD","file":"component---src-pages-blog-tsx-be20292683548af1e784.js","sourcesContent":["import LoadingDots from './LoadingDots';\n\nexport default LoadingDots;\n","// global dependencies\nimport React from 'react';\n\n// local dependencies\nimport { graphql, Link } from 'gatsby';\nimport styles from './LoadingDots.module.scss';\n\nconst LoadingDots: React.FC<any> = props => {\n  return (\n    <div className={styles.loaderContainer}>\n      <div className={styles.loaderDot} />\n      <div className={styles.loaderDot} />\n      <div className={styles.loaderDot} />\n      <div className={styles.loaderDot} />\n      <div className={styles.loaderDot} />\n    </div>\n  );\n};\n\nexport default LoadingDots;\n","// global dependencies\nimport React, { lazy, Suspense } from 'react';\n\n// local dependencies\nimport { graphql, Link } from 'gatsby';\nimport Layout from '../components/gatsby_elements/layout';\nimport SEO from '../components/seo';\nimport styles from './blog.module.scss';\nimport LoadingDots from '../components/LoadingDots';\n\nconst SinglePostOnPostsList = lazy(() =>\n  import('../components/SinglePostOnPostsList')\n);\n\nconst BlogPostsList: React.FC<any> = ({ data: queryData }) => {\n  const posts = queryData.allPrismicBlogPosts.edges;\n  const pageData = queryData.prismicListofblogs.data;\n  const image = pageData.main_image.url;\n  const imageAltText = pageData.main_image.alt;\n  const postsTotalCount = posts.totalCount;\n\n  return (\n    <Layout>\n      <SEO\n        title=\"List of blog postsÂ·3d-points.com\"\n        description=\"Page contains a list of the posts of the blog about reality capturing\"\n        pathname=\"/blog\"\n      />\n      <section\n        className={styles.sectionContainer}\n        onContextMenu={e => e.preventDefault()}\n      >\n        <div className={styles.blogHeader}>\n          <h1 className={styles.headerTitle}>{pageData.blogs_title[0].text}</h1>\n          <img className={styles.headerImage} src={image} alt={imageAltText} />\n        </div>\n        <div className={styles.postsCounter}>{postsTotalCount}</div>\n        <div className={styles.underHeading}>\n          <ul className={styles.listOfPosts}>\n            {posts.map((post, index) => {\n              const {\n                data: postData,\n                first_publication_date: date,\n                uid,\n              } = post.node;\n              const postTitle = postData.title[0].text;\n              const imageURL = postData.main_image.url;\n              const imageAlt = postData.main_image.alt;\n              const url = `/posts/${uid}`;\n              return (\n                <Suspense fallback={LoadingDots} key={url}>\n                  <SinglePostOnPostsList\n                    singlePostData={{\n                      postTitle,\n                      imageAlt,\n                      imageURL,\n                      url,\n                      date,\n                    }}\n                  />\n                </Suspense>\n              );\n            })}\n          </ul>\n        </div>\n      </section>\n    </Layout>\n  );\n};\n\nexport default BlogPostsList;\n\nexport const listOfBlogsQuery = graphql`\n  query listofblogsQuery {\n    prismicListofblogs {\n      data {\n        blogs_title {\n          text\n        }\n        main_image {\n          url\n          alt\n        }\n      }\n    }\n    allPrismicBlogPosts(\n      sort: { fields: [last_publication_date], order: DESC }\n    ) {\n      totalCount\n      edges {\n        node {\n          id\n          uid\n          first_publication_date(formatString: \"DD MMMM YYYY\")\n          data {\n            title {\n              text\n            }\n            main_image {\n              alt\n              url\n            }\n          }\n        }\n      }\n    }\n    #    allPrismicBlogPost(filter: { uid: { eq: \"leicartc360\" } }) {\n    #      edges {\n    #        node {\n    #          data {\n    #            body {\n    #              ... on PrismicBlogPostBodyText {\n    #                id\n    #                primary {\n    #                  rich_text_in_post {\n    #                    text\n    #                    raw\n    #                    html\n    #                  }\n    #                }\n    #              }\n    #            }\n    #          }\n    #        }\n    #      }\n    #    }\n  }\n`;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"layoutContainer\":\"Layout-module--layoutContainer--3hL1M\",\"childrenContainer\":\"Layout-module--childrenContainer--I2OUF\",\"footer\":\"Layout-module--footer--Tpjf_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sectionContainer\":\"blog-module--sectionContainer--2Ux81\",\"blogHeader\":\"blog-module--blogHeader--2rEBf\",\"headerTitle\":\"blog-module--headerTitle--fJZPD\",\"headerImage\":\"blog-module--headerImage--2dwqC\",\"listOfPosts\":\"blog-module--listOfPosts--1nRo6\",\"oneOfPosts\":\"blog-module--oneOfPosts--1Q6bN\",\"descriptionOfPost\":\"blog-module--descriptionOfPost--i0Waj\",\"titleName\":\"blog-module--titleName--2WKNq\",\"postFirstPublicationDate\":\"blog-module--postFirstPublicationDate--2qQD1\",\"postThumbnail\":\"blog-module--postThumbnail--1bS2i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loaderContainer\":\"LoadingDots-module--loaderContainer--1bsAZ\",\"loaderDot\":\"LoadingDots-module--loaderDot--cfUcs\",\"loading\":\"LoadingDots-module--loading--3Xqw9\"};","import React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport './layout.css';\nimport styles from './Layout.module.scss';\nimport NavbarBlog from '../Navbar/NavbarBlog';\nimport Footer from '../../pages/sections/footer';\n\nconst Layout: React.FC = ({ children }) => {\n  // const data = useStaticQuery(graphql`\n  //   query SiteTitleQuery {\n  //     site {\n  //       siteMetadata {\n  //         title\n  //       }\n  //     }\n  //   }\n  // `);\n\n  return (\n    <>\n      <div className={styles.layoutContainer}>\n        <NavbarBlog desktopScreenVersion />\n        <main className={styles.childrenContainer}>{children}</main>\n        <div className={styles.footer}>\n          <Footer />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Layout;\n"],"sourceRoot":""}